# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: CI/CD Pipeline

on:
  push:
    branches: [ "main", "feat/*" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:  # Allows manual triggering

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        configuration: [Debug, Release]

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    # Install the .NET 9 SDK with fallback options
    - name: Setup .NET 9
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: |
          8.0.x
          9.0.x

    # Verify .NET installation
    - name: Verify .NET version
      run: |
        dotnet --version
        dotnet --list-sdks

    # Clear NuGet cache to avoid package conflicts
    - name: Clear NuGet cache
      run: dotnet nuget locals all --clear

    # Restore dependencies
    - name: Restore dependencies
      run: dotnet restore --verbosity normal

    # Build the project
    - name: Build
      run: dotnet build --configuration ${{ matrix.configuration }} --no-restore --verbosity normal

    # Execute all unit tests
    - name: Execute unit tests
      run: dotnet test --configuration ${{ matrix.configuration }} --no-build --verbosity normal --logger "trx;LogFileName=test-results.trx"

    # Upload test results
    - name: Upload test results
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: test-results-${{ matrix.configuration }}
        path: "**/TestResults/*.trx"

    # Upload build artifacts
    - name: Upload build artifacts
      if: success()
      uses: actions/upload-artifact@v4
      with:
        name: ${{ matrix.configuration }}-Artifacts
        path: |
          **/bin/${{ matrix.configuration }}/
          !**/bin/${{ matrix.configuration }}/**/ref/
          !**/bin/${{ matrix.configuration }}/**/runtimes/
